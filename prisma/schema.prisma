generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id                          String    @id
  season                      Int
  status                      String
  arenaName                   String    @map("arena_name")
  awayTeamId                  String    @map("away_team_id")
  awayTeamPeriods             Int[]     @map("away_team_periods")
  awayTeamScore               Int       @map("away_team_score")
  homeTeamId                  String    @map("home_team_id")
  homeTeamPeriods             Int[]     @map("home_team_periods")
  homeTeamScore               Int       @map("home_team_score")
  date                        String
  startTime                   String    @map("start_time")
  teamsGamesAwayTeamIdToTeams Team      @relation("gamesAwayTeamIdToTeams", fields: [awayTeamId], references: [id])
  teamsGamesHomeTeamIdToTeams Team      @relation("gamesHomeTeamIdToTeams", fields: [homeTeamId], references: [id])
  Message                     Message[]

  @@map("games")
}

model Message {
  id        Int      @id @default(autoincrement())
  userId    String   @map("user_id")
  message   String
  createdAt DateTime @default(now()) @map("created_at")
  gameId    String   @map("game_id")
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model Team {
  id                          String @id
  name                        String
  code                        String
  city                        String
  logo                        String
  conference                  String
  gamesGamesAwayTeamIdToTeams Game[] @relation("gamesAwayTeamIdToTeams")
  gamesGamesHomeTeamIdToTeams Game[] @relation("gamesHomeTeamIdToTeams")

  @@map("teams")
}

model User {
  id        String    @id @default(uuid())
  nickname  String    @unique
  email     String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  password  String
  messages  Message[]

  @@map("users")
}

model VerificationCode {
  id        String   @id @default(uuid())
  email     String   @unique
  code      String
  createdAt DateTime @default(now()) @map("created_at")
  expiresAt DateTime @default(now()) @map("expires_at")

  @@map("verification_codes")
}
